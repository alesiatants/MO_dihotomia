// Метод_дихотомии.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cmath>
#include <conio.h>
using namespace std;
//целевая функция
double f(double x) {
    return (200/x)+((9*x)/2);
}
int main()
{
    setlocale(LC_ALL, "Russian");
    //объявление основных переменных
    double a, b, sigma, eps = 0.0001;
    //объявление вспомагательных переменых
    double x, fx, x1, x2;
    int k =0;
    //инициализация величины различности точек x1 и x2
    sigma = eps / 2;
    cout << "Расчет оптимального решения задачи\n";
    cout << "Введите левую границу а - ";
    cin >> a;
    cout << "Введите правую границу b - ";
    cin >> b;
    //Цикл с условием его завершения, когда размер интервала неопределенности будет меньше либо равняться заданной точности eps
    while (b - a > eps) {
        //Определение серидины интервала
        x = (a + b) / 2;
        //Отлаживаем от цетра точки x1 и x2 на длину sigma/2
        x1 = x - sigma / 2;
        x2 = x + sigma / 2;
        //Если экстремум находится между точками x1 и x2, то определяем их границами нового интервала
        if (f(x1) == f(x2)) {
            a = x1;
            b = x2;
        }
        else {
            //Если значение функции в точке x1 < f(x2) сдвигам правую границу влево и b теперь присваиваем x2
            if (f(x1) < f(x2)) {
                b = x2;
            }
            //Если значение функции в точке x2 < f(x1) сдвигам ktde. границу вghfdj и a теперь присваиваем x1
            else {
                a = x1;
            }
        }
        k++;
        cout <<"k = "<<k<<" x = " << x << " x1 = " << x1 << " x2 = " << x2 << " f(x1) = " << f(x1) << " f(x2) = " << f(x2) << " a = " << a << " b = " << b << " "<< f((a + b) / 2)<< endl;
    }
    //Определяем значение проектного параметра (размер стержня)
    x = (a + b) / 2;
    //Определяем минимальное значение целевой функции (силы, которую необходимо приложить к краю стержня)
    fx = f(x);
    cout << "Оптимальный размер стержня x = " << x << " при минимизированной силе, приложенной к краю стержня f = " <<fx;

       
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
